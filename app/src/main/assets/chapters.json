[
  {
    "id": 1,
    "color": "#1976d2",
    "name": "Chapter 1",
    "summary": "<p class=\"p1\">&nbsp;</p><CENTER><h1 class=\"p1\" ><strong>Chapter 1 Summary</strong></h1></CENTER><CENTER><h1 class=\"p1\" ><h2 ><strong>Java Building Blocks&nbsp;</strong></h2></CENTER><p class=\"p1\">In this chapter, you studied that Java classes consist of members called fields and methods. An<br />object is an instance of a Java class. There are three styles of comment: a single-line comment<br /><strong>(//)</strong>, a multiline comment <strong>(/* */)</strong>, and a Javadoc comment <strong>(/** */)</strong>.<br />Java begins program execution with a <strong>main()</strong> method. The most common signature for<br />this method run from the command line is <strong>public static void main(String[] args)</strong>.<br />Arguments are passed in after the class name, as in <strong>Java NameOfClass firstArgument</strong>.<br />Arguments are indexed starting with 0.</p><p class=\"p1\">Java code is organised into folders called packages. To reference classes in other packages,<br />you use an import statement. A wildcard ending an import statement means you want<br />to import all classes in that package. It does not include packages that are inside that one.<br />java.lang is a special package that does not need to be imported.</p><p class=\"p1\">Constructors create Java objects. A constructor is a method matching the class name and<br />omitting the return type. When an object is instantiated, fields and blocks of code are<br />initialized first. Then the constructor is run.</p><p class=\"p1\">Primitive types are the basic building blocks of Java types. They are assembled into<br />reference types. Reference types can have methods and be assigned to null. In addition to<br />&ldquo;normal&rdquo; numbers, numeric literals are allowed to begin with <strong>0 (octal), 0x (hex), 0X (hex),</strong><br /><strong>0b (binary), or 0B (binary)</strong>.</p><p class=\"p1\">Numeric literals are also allowed to contain underscores as long<br />as they are directly between two other numbers.<br />Declaring a variable involves stating the data type and giving the variable a name.<br />Variables that represent fields in a class are automatically initialized to their corresponding<br />&ldquo;zero&rdquo; or <strong>null</strong> value during object instantiation. Local variables must be specifically<br />initialized. Identifiers may contain letters, numbers, <strong>$, or _. Identifiers</strong> may not begin with<br />numbers.</p><p class=\"p1\">Scope refers to that portion of code where a variable can be accessed. There are three<br />kinds of variables in Java, depending on their scope: instance variables, class variables, and local variables. Instance variables are the nonstatic fields of your class. Class variables are<br />the static fields within a class. Local variables are declared within a method.</p><p class=\"p1\">For some class elements, order matters within the file. The package statement comes first<br />if present. Then comes the import statements if present. Then comes the class declaration.<br />Fields and methods are allowed to be in any order within the class.<br />Garbage collection is responsible for removing objects from memory when they can<br />never be used again. An object becomes eligible for garbage collection when there are no<br />more references to it or its references have all gone out of scope. The <strong>finalize() </strong>method<br />will run once for each object if/when it is first garbage collected.<br />Java code is object-oriented, meaning all code is defined in classes. Access modifiers<br />allow classes to encapsulate data. Java is platform independent, compiling to bytecode. It is<br />robust and simple by not providing pointers or operator overloading. Finally, Java is secure<br />because it runs inside a virtual machine.</p>",
    "questions": [
      {
        "id": 0,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 0,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 1,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 2,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 1,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 3,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 4,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 5,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 2,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 6,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 7,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 8,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 3,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 9,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 10,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 11,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 4,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 12,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 13,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 14,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 5,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 15,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 16,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 17,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 6,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 18,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 19,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 20,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 7,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 21,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 22,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 23,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 8,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 24,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 25,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 26,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 9,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 27,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 28,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 29,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 10,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 30,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 31,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 32,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 11,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 33,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 34,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 35,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 12,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 36,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 37,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 38,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 13,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 39,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 40,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 41,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 14,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 42,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 43,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 44,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 15,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 45,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 46,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 47,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 16,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 48,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 49,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 50,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 17,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 51,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 52,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 53,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 18,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 54,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 55,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 56,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 19,
        "chapterId": 1, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 57,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 58,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 59,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      }
    ]
  },
  {
    "id": 2,
    "color": "#00796b",
    "name": "Chapter 2",
    "summary": "<p class=\"p1\">&nbsp;</p><CENTER><h1 class=\"p1\" ><strong>Chapter 2 Summary</strong></h1></CENTER><CENTER><h1 class=\"p1\" ><h2 ><strong>Operators and Statements&nbsp;</strong></h2></CENTER><p>This chapter cover a wide variety of topics, including dozens of Java operators, along<br />with numerous control flow statements. Many of these operators and statements may have<br />been new to you.</p><p>It is important that you understand how to use all of the required Java operators covered in this chapter and know how operator precedence influences the way a particular expression is interpreted. There will likely be numerous questions on the exam that appear to test one thing, such as <strong>StringBuilder</strong> or exception handling, when in fact the answer is related to the misuse of a particular operator that causes the application to fail to compile. When you see an operator on the exam, always check that the appropriate data types are used and<br />that they match each other where applicable.</p><p>For statements, this chapter covered two types of control structures: decision-making controls structures, including <strong>if-then</strong>, <strong>if-then-else</strong>, and <strong>switch statements</strong>, as well as repetition control structures including <strong>for</strong>, <strong>for-each</strong>,<strong> while</strong>, and do-while. Remember that most of these structures require the evaluation of a particular boolean expression either for branching decisions or once per repetition. The switch statement is the only one that supports a variety of data types, including String variables as of Java 7.</p><p>With a for-each statement you don&rsquo;t need to explicitly write a boolean expression, since the compiler builds them implicitly. For clarity, we referred to an enhanced for loop as a for-each loop, but syntactically they are written as a for statement.</p><p>We concluded this chapter by discussing advanced control options and how flow can be enhanced through nested loops, break statements, and continue statements. Be wary of questions on the exam that use nested statements, especially ones with labels, and verify they are being used correctly.</p><p>This chapter is especially important because at least one component of this chapter will likely appear in every exam question with sample code. Many of the questions on the exam focus on proper syntactic use of the structures, as they will be a large source of questions<br />that end in &ldquo;Does not compile.&rdquo; You should be able to answer all of the review questions correctly or fully understand those that you answered incorrectly before moving on to later<br />chapters.</p>",
    "questions": [
      {
        "id": 20,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 0,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 1,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 2,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 21,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 3,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 4,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 5,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 22,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 6,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 7,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 8,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 23,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 9,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 10,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 11,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 24,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 12,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 13,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 14,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 25,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 15,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 16,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 17,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 26,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 18,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 19,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 20,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 27,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 21,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 22,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 23,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id":28,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 24,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 25,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 26,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 29,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 27,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 28,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 29,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 30,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 30,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 31,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 32,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 31,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 33,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 34,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 35,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 32,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 36,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 37,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 38,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 33,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 39,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 40,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 41,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 34,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 42,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 43,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 44,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 35,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 45,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 46,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 47,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 36,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 48,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 49,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 50,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 37,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 51,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 52,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 53,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 38,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 54,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 55,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 56,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 39,
        "chapterId": 2, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 57,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 58,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 59,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      }
    ]
  },
  {
    "id": 3,
    "color": "#fbc02d",
    "name": "Chapter 3",
    "summary": "<p class=\"p1\">&nbsp;</p><CENTER><h1 class=\"p1\" ><strong>Chapter 3 Summary</strong></h1></CENTER><CENTER><h1 class=\"p1\" ><h2 ><strong>Core Java APIs&nbsp;</strong></h2></CENTER><p>In this chapter, you learned that Strings are immutable sequences of characters. The new operator is optional. The concatenation <strong>operator (+)</strong> creates a new String with the content of the first String followed by the content of the second String. If either operand involved in the + expression is a String, concatenation is used; otherwise, addition is used. <br />String literals are stored in the string pool. The String class has many methods. You need to know <strong>charAt()</strong>, <strong>concat()</strong>, <strong>endsWith()</strong>, <strong>equals()</strong>, <strong>equalsIgnoreCase()</strong>,<strong> indexOf()</strong>, <strong>length()</strong>, <strong>replace()</strong>, <strong>startsWith()</strong>, <strong>substring()</strong>, <strong>toLowerCase()</strong>, <strong>toUpperCase()</strong>, and <strong>trim()</strong>.</p><p>StringBuilders are mutable sequences of characters. Most of the methods return a reference to the current object to allow method chaining. The StringBuilder class has many methods. You need to know <strong>append()</strong>, <strong>charAt()</strong>, <strong>delete()</strong>, <strong>deleteCharAt()</strong>,<strong> indexOf()</strong>, <strong>insert()</strong>, <strong>length()</strong>, <strong>reverse()</strong>, <strong>substring()</strong>, and <strong>toString()</strong>. StringBuffer is the same as StringBuilder except that it is thread safe.</p><p>Calling<strong> ==</strong> on String objects will check whether they point to the same object in the pool. Calling <strong>==</strong> on StringBuilder references will check whether they are pointing to the same StringBuilder object. Calling<strong> equals()</strong> on String objects will check whether the sequence of characters is the same. Calling<strong> equals()</strong> on StringBuilder objects will check whether they are pointing to the same object rather than looking at the values inside.<br />An array is a <strong>fixed-size</strong> area of memory on the heap that has space for primitives or pointers to objects. You specify the size when creating <strong>it&mdash;for example, int[] a = new int[6]</strong>;. Indexes begin with 0 and elements are referred to using a[0]. The <strong>Arrays.sort()</strong> method sorts an array. <strong>Arrays.binarySearch()</strong> searches a sorted array and returns the index of a match. If no match is found, it negates the position where the element would need to be inserted and subtracts 1. Methods that are passed <strong>varargs (&hellip;)</strong> can be used as if a normal array was passed in. In a multidimensional array, the second-level arrays and beyond can be different sizes.</p><p>An ArrayList can change size over its life. It can be stored in an ArrayList or List reference. Generics can specify the type that goes in the ArrayList. You need to know the methods <strong>add()</strong>, <strong>clear()</strong>, <strong>contains()</strong>, <strong>equals()</strong>, <strong>isEmpty()</strong>, <strong>remove()</strong>,<strong> set()</strong>, and <strong>size()</strong>. <br />Although an ArrayList is not allowed to contain primitives, Java will <strong>autobox</strong> parameters passed into the proper wrapper type. <strong>Collections.sort()</strong> sorts an <strong>ArrayList</strong>.<br />A LocalDate contains just a date, a LocalTime contains just a time, and a LocalDateTime contains both a date and time. All three have private constructors and are created using <strong>LocalDate.now()</strong> or <strong>LocalDate.of()</strong> (or the equivalents for that class). Dates and times can be manipulated using <strong>plusXXX</strong> or <strong>minusXXX</strong> methods. The Period class represents a number of days, months, or years to add or subtract from a <strong>LocalDate</strong> or <strong>LocalDateTime</strong>.<br />DateTimeFormatter is used to output dates and times in the desired format. The date and time classes are all immutable, which means the return value must be used.</p>",
    "questions": [
      {
        "id": 40,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 0,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 1,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 2,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 41,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 3,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 4,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 5,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 42,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 6,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 7,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 8,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 43,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 9,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 10,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 11,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 44,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 12,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 13,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 14,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 45,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 15,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 16,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 17,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 46,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 18,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 19,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 20,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 47,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 21,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 22,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 23,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 8,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 24,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 25,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 26,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 49,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 27,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 28,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 29,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 50,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 30,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 31,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 32,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 51,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 33,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 34,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 35,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 52,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 36,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 37,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 38,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 53,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 39,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 40,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 41,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 54,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 42,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 43,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 44,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 55,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 45,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 46,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 47,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 56,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 48,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 49,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 50,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 57,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 51,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 52,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 53,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 58,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 54,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 55,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 56,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 59,
        "chapterId": 3, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 57,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 58,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 59,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      }
    ]
  },
  {
    "id": 4,
    "color": "#e64a19",
    "name": "Chapter 4",
    "summary": "<p class=\"p1\">&nbsp;</p><CENTER><h1 class=\"p1\" ><strong>Chapter 4 Summary</strong></h1></CENTER><CENTER><h1 class=\"p1\" ><h2 ><strong>Methods and Encapsulation&nbsp;</strong></h2></CENTER><p>As you learned in this chapter, Java methods start with an access modifier of <strong>public</strong>, <strong>private</strong>, <strong>protected</strong> or blank (default access). This is followed by an optional specifier such as static, final, or abstract. Next, comes the return type, which is void or a Java type.<br />The method name follows, using standard Java identifier rules. Zero or more parameters go in parentheses as the parameter list. Next come any optional exception types. Finally, zero or more statements go in braces to make up the method body.<br />Using the <strong>private</strong> keyword means the code is only available from within the same class.Default <strong>(package private)</strong> access means the code is only available from within the same package. Using the protected keyword means the code is available from the same package or subclasses. Using the <strong>public</strong> keyword means the code is available from anywhere. <strong>Static methods and static variables</strong> are shared by the <strong>class</strong>. When referenced from outside the class, they are called using the classname&mdash;for example, <strong>StaticClass.method()</strong>. Instance members are allowed to call static members, but static members are not allowed to call instance members. Static imports are used to import static members. Java uses pass-by-value, which means that calls to methods create a copy of the parameters. Assigning new values to those parameters in the method doesn&rsquo;t affect the caller&rsquo;s variables.<br />Calling methods on objects that are method parameters changes the state of those objects and is reflected in the caller. <br />Overloaded methods are methods with the same name but a different parameter list.<br />Java calls the most specific method it can find. Exact matches are preferred, followed by wider primitives. After that comes autoboxing and finally <strong>varargs</strong>.<br />Constructors are used to instantiate new objects. The default no-argument constructor is called when no constructor is coded. Multiple constructors are allowed and can call each other by writing <strong>this()</strong>. If<strong> this()</strong> is present, it must be the first statement in the constructor.<br />Constructors can refer to instance variables by writing this before a variable name to indicate they want the instance variable and not the method parameter with that name. The order of initialization is the superclass (which we will cover in Chapter 5); <strong>static variables and static&nbsp;</strong>initializers in the order they appear; instance variables and instance initializers in the order they appear, and finally the constructor.<br />Encapsulation refers to preventing callers from changing the instance variables directly. This is done by making instance variables private and getters/setters public. Immutability refers to preventing callers from changing the instance variables at all. This uses several techniques, including removing setters. JavaBeans use methods beginning with is and get for boolean and non-boolean property types, respectively. Methods beginning with set are used for setters. <br /><strong>Lambda</strong> expressions, or lambdas, allow passing around blocks of code. The full syntax looks like <strong>(String a, String b) -&gt; { return a.equals(b); }</strong>. The parameter types can be omitted. When only one parameter is specified without a type, the parentheses can also be omitted. The braces and return statement can be omitted for a single statement, making the short form <strong>(a -&gt; a.equals(b)</strong>. Lambdas are passed to a method expecting an interface<br />with one method. The predicate is a common interface. It has one method named test that returns a boolean and takes any type. The <strong>removeIf()</strong> method on ArrayList takes a <strong>Predicate</strong>.</p>",
    "questions": [
      {
        "id": 60,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 0,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 1,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 2,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 61,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 3,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 4,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 5,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 62,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 6,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 7,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 8,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 63,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 9,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 10,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 11,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 64,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 12,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 13,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 14,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 65,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 15,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 16,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 17,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 66,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 18,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 19,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 20,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 67,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 21,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 22,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 23,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 68,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 24,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 25,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 26,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 69,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 27,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 28,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 29,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 70,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 30,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 31,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 32,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 71,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 33,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 34,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 35,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 72,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 36,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 37,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 38,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 73,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 39,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 40,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 41,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 74,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 42,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 43,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 44,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 75,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 45,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 46,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 47,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 76,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 48,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 49,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 50,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 77,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 51,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 52,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 53,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 78,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 54,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 55,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 56,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 79,
        "chapterId": 4, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 57,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 58,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 59,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      }
    ]
  },
  {
    "id": 5,
    "color": "#607d8b",
    "name": "Chapter 5",
    "summary": "<p class=\"p1\">&nbsp;</p><CENTER><h1 class=\"p1\" ><strong>Chapter 5 Summary</strong></h1></CENTER><CENTER><h1 class=\"p1\" ><h2 ><strong>Class Design&nbsp;</strong></h2></CENTER><p>This chapter took the basic class structure presented in Chapter 4 and expanded it by introducing the notion of inheritance. Java classes follow a multilevel <strong>single-inheritance</strong> pattern in which every class has exactly one direct parent class, with all classes eventually inheriting from <strong>java.lang.Object.</strong> Java interfaces simulate a limited form of multiple <strong>inheritance</strong>, since Java classes may implement multiple interfaces.<br />Inheriting a class gives you access to all of the public and protected methods of the class, but special rules for constructors and overriding methods must be followed or the code will not compile. For example, if the parent class doesn&rsquo;t include a no-argument constructor, an explicit call to a parent constructor must be provided in the child&rsquo;s constructors.<br />Pay close attention to the exam to any class that defines a constructor with arguments and doesn&rsquo;t define a no-argument constructor.<br />This Chapter reviewed <strong>overloaded</strong>, <strong>overridden</strong>, and<strong> hidden methods</strong> and showed how they differ,<br />especially in terms of <strong>polymorphism</strong>. and also introduced the notion of <strong>hiding variables</strong>, although the chapter strongly discourages this in practice as it often leads to confusing, difficult to maintain code.<br />The chapter introduced <strong>abstract classes</strong> and <strong>interfaces</strong> and showed how you can use them to define a platform for other developers to interact with. By definition, an abstract type cannot be instantiated directly and requires a concrete subclass for the code to be used. Since default and static interface methods are new to Java 8, expect to see at least one question<br />on them on the exam.</p>",
    "questions": [
      {
        "id": 80,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 0,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 1,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 2,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 81,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 3,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 4,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 5,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 82,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 6,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 7,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 8,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 83,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 9,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 10,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 11,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 84,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 12,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 13,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 14,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 85,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 15,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 16,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 17,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 86,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 18,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 19,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 20,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 87,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 21,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 22,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 23,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 88,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 24,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 25,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 26,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 89,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 27,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 28,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 29,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 90,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 30,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 31,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 32,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 91,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 33,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 34,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 35,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 92,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 36,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 37,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 38,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 93,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 39,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 40,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 41,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 94,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 42,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 43,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 44,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 95,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 45,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 46,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 47,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 96,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 48,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 49,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 50,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 97,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 51,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 52,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 53,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 98,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 54,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 55,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 56,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      },
      {
        "id": 99,
        "chapterId": 5, "type": 1,
        "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
        "explanation": "expl",
        "isFavorite": true,
        "answers": [
          {
            "id": 57,
            "answer": "answer",
            "isCorrect": true
          },
          {
            "id": 58,
            "answer": "answer",
            "isCorrect": false
          },
          {
            "id": 59,
            "answer": "answer",
            "isCorrect": false
          }
        ]
      }
    ]
  },
  {
  "id": 6,
  "color": "#7b1fa2",
  "name": "Chapter 6",
  "summary": "<p class=\"p1\">&nbsp;</p><CENTER><h1 class=\"p1\" ><strong>Chapter 6 Summary</strong></h1></CENTER><CENTER><h1 class=\"p1\" ><h2 ><strong>Exceptions&nbsp;</strong></h2></CENTER><p>An exception indicates something unexpected happened. A method can handle an exception<br />by catching it or declaring it for the caller to deal with. Many exceptions are thrown<br />by Java libraries. You can throw your own exception with code such as throw new <strong>Exception()</strong>.<br />Subclasses of java.lang.Error are exceptions that a programmer should not attempt to handle. Subclasses of java.lang.RuntimeException are runtime (unchecked) exceptions.<br />Subclasses of <strong>java.lang.Exception</strong>, but not <strong>java.lang.RuntimeException</strong> are checked exceptions. Java requires checked exceptions to be handled or declared.<br />If a try statement has multiple catch blocks, at most one catch block can run. Java looks for an exception that can be caught by each catch block in the order they appear, and the first match is run. Then execution continues after the try statement. If both catch and finally throw an exception, the one from finally gets thrown. <br />Common runtime exceptions include:</p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>ArithmeticException</strong></em></p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>ArrayIndexOutOfBoundsException</strong></em></p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>ClassCastException</strong></em></p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>IllegalArgumentException</strong></em></p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>NullPointerException</strong></em></p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>NumberFormatException</strong></em></p><p class=\"p1\"><strong>IllegalArgumentException</strong> and NumberFormatException are typically thrown by the programmer, whereas the others are typically thrown by the JVM.<br />Common checked exceptions include:</p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>IOException</strong></em></p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>FileNotFoundException</strong></em></p><p class=\"p2\">Common errors include:</p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>ExceptionInInitializerError</strong></em></p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>StackOverflowError</strong></em></p><p class=\"p1\"><span class=\"s1\">■ </span><em><strong>NoClassDefFoundError</strong></em></p><p class=\"p1\">When a method overrides a method in a superclass or interface, it is not allowed to add checked exceptions. It is allowed to declare fewer exceptions or declare a subclass of a declared exception. Methods declare exceptions with the keyword throws.</p>",
  "questions": [
    {
      "id": 100,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 0,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 1,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 2,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 101,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 3,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 4,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 5,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 102,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 6,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 7,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 8,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 103,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 9,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 10,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 11,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 104,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 12,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 13,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 14,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 105,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 15,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 16,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 17,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 106,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 18,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 19,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 20,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 107,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 21,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 22,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 23,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 108,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 24,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 25,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 26,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 109,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 27,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 28,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 29,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 110,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 30,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 31,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 32,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 111,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 33,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 34,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 35,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 112,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 36,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 37,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 38,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 113,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 39,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 40,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 41,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 114,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 42,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 43,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 44,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 115,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 45,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 46,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 47,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 116,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 48,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 49,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 50,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 117,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 51,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 52,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 53,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 118,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 54,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 55,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 56,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 119,
      "chapterId": 6, "type": 1,
      "statement": "What is the output of the following program? \n \n 1: public class FeedingSchedule { \n 2: public static void main(String[] args) { \n 3: boolean keepGoing = true; \n 4: int count = 0; \n 5: int x = 3; \n 6: while(count++ &lt; 3) { \n 7: int y = (1 + 2 * count) % 3; \n 8: switch(y) { \n 9: default: \n 10: case 0: x -= 1; break; \n 11: case 1: x += 5; \n 12: } \n 13: } \n 14: System.out.println(x); \n 15: } }",
      "explanation": "expl",
      "isFavorite": true,
      "answers": [
        {
          "id": 57,
          "answer": "answer",
          "isCorrect": true
        },
        {
          "id": 58,
          "answer": "answer",
          "isCorrect": false
        },
        {
          "id": 59,
          "answer": "answer",
          "isCorrect": false
        }
      ]
    }
  ]
}
]